name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/
          retention-days: 7

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Setup Supabase local
        uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Start Supabase local
        run: supabase start
      - name: Create .env.test file
        run: |
          echo "TEST_BASE_URL=http://localhost:3000" >> .env.test
          echo "ADMIN_EMAIL=admin@sitearis.test" >> .env.test
          echo "ADMIN_PASSWORD=TestAdmin123!" >> .env.test
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.test
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env.test
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_TEST_SECRET_KEY }}" >> .env.test
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_TEST_PUBLISHABLE_KEY }}" >> .env.test
      - name: Build Next.js app
        run: npm run build
      - name: Run E2E tests
        run: npm run test:e2e
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results
          path: test-results/
          retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run npm audit
        run: npm audit --audit-level=high
      - name: Install ZAP CLI
        run: |
          mkdir -p $HOME/zap
          wget -O $HOME/zap/zap.tar.gz https://github.com/zaproxy/zaproxy/releases/download/v2.12.0/ZAP_2.12.0_Linux.tar.gz
          tar -xvf $HOME/zap/zap.tar.gz -C $HOME/zap
          echo "$HOME/zap/ZAP_2.12.0" >> $GITHUB_PATH
      - name: Start application
        run: |
          npm run build
          npm run start &
          sleep 10
      - name: Run ZAP scan
        run: |
          zap-cli quick-scan --self-contained --start-options '-config api.disablekey=true' -r security-report.html http://localhost:3000
      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.html
          retention-days: 7

  performance:
    name: Performance Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build Next.js app
        run: npm run build
      - name: Start application
        run: |
          npm run start &
          sleep 10
      - name: Run Lighthouse audit
        run: npm run test:lighthouse
      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-reports
          path: lighthouse-reports/
          retention-days: 7

  load-test:
    name: Load Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build Next.js app
        run: npm run build
      - name: Start application
        run: |
          npm run start &
          sleep 10
      - name: Install k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
      - name: Run basic load test
        run: k6 run tests/load/basic-load.js
      - name: Generate load test report
        run: |
          mkdir -p load-test-reports
          k6 run --summary-export=load-test-reports/summary.json tests/load/basic-load.js
      - name: Upload load test results
        uses: actions/upload-artifact@v3
        with:
          name: load-test-reports
          path: load-test-reports/
          retention-days: 7

  rgpd-audit:
    name: RGPD Compliance Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run RGPD audit
        run: npm run test:rgpd
      - name: Upload RGPD audit results
        uses: actions/upload-artifact@v3
        with:
          name: rgpd-reports
          path: rgpd-reports/
          retention-days: 7

  deploy:
    name: Deploy to Vercel
    needs: [lint, test, e2e, security, performance]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod' 